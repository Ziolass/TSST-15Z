(wzorowane na metodach z NetworkNode/MenagementModule/ManagementCenter)
(OK można zastąpić czymkolwiek innym, równie dobrze każde polecenie może mieć 
indywidualne potwierdzenie np. Link-established ale nie wiem czy jest specjalnie sens)

Legenda:
Management = M
Router = R
Klient = C
-> = kierunek komunikatu
| oraz # = znaki specjalne oddzielające wartości
_______________________________________________________________________________________
0. Identyfikacja
a) router
M->R: identify|
R->M: router|<name>

EXAMLE: R->M: router|root1

b)
M->C: identify|
C->M: client|<name>

EXAMLE: C->M: client|client1


1. Wyłączenie węzła:
M->R: disable-node|
R->M: OK

2. 
M->R: close-connection|{port_z1}#{port_do1}#{poziom_z1}#{poziom_do1}#{typ_konteneru1}#{typ_modulu1} 
R->M: OK
	
3. Dodanie połączenia
M->R: sub-connection-HPC|{port_z1}#{port_do1}#{poziom_z1}#{poziom_do1}#{typ_konteneru1}#{typ_modulu1} 
R->M: OK
(wartości oddzielone # w kolejności:
-port z którego wychodzi
-port na który ma wejść
-poziom z którego przekłada
-poziom do którego przekłada
-typ kontera
-typ modulu
poszczególne połączenia oddzielone |

EXAMLE: M->R: sub-connection-HPC|1#2#3#4#VC1#STM1
EXAMPLE Multiple Con: M->R: sub-connection-HPC|1#2#3#4#VC1#STM1|5#6#7#8#VC12#STM4

4. Podanie listy połączeń
M->R: get-connection-list|
R->M: {port_wejsciowy1}#{port_wwyjsciowy1}#{poziom_wejsciowy1}#{poziom_wyjsciowy1}#{typ_konteneru1}{modul1}|{port_wejsciowy2}#{port_wwyjsciowy2}#{poziom_wejsciowy2}#{poziom_wyjsciowy2}#{typ_konteneru2}{modul2} itd

EXAMPLE: R->M: 1#2#3#4#VC1#STM1|5#6#7#8#VC12#STM4

5. Podanie listy portów
M->R: get-ports|
R->M: {IN1}#{IN2}#{IN3}|{OUT1}#{OUT2}#{OUT3}
(najpierw porty wejściowe oddzielone # , następnie | i porty wyjściowe oddzielone #)

EXAMPLE: R->M: 1#2#3#4|5#6#7#8

7. Przypadek gdy router nie jest w stanie wykonać polecenia
M->R: <polecenie>
R->M: ERROR
